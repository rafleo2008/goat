language: generic
dist: trusty
services:
  - docker
branches:
  only:
    - ffb
    - bogota
    - hasenbergl
    - muenchen
    - freising
    - test_travis

before_install:
  - chmod ugo+x ./app/scripts/build-condition.sh

jobs:
  include:
    #BUILD STAGE
    - stage: build
      if: type = pull_request OR fork = true
      name: "Build Stage"
      script:
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/client"; then
          make build-docker-image -e COMPONENT=client; else
          echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/api"; then
          make build-docker-image -e COMPONENT=api; else
          echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/print"; then
          make build-docker-image -e COMPONENT=print; else
          echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/cron"; then
          make build-docker-image-app-context -e COMPONENT=cron; else
          echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/database"; then
          make build-database-docker-image; else
          echo "NO CHANGES SINCE LAST COMMIT"; fi

    #RELEASE STAGE
    - stage: release
      if: type = push AND fork = false
      name: "Release Stage"
      script:
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/client" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make release-docker-image -e COMPONENT=client; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/api" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make release-docker-image -e COMPONENT=api; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/print" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make release-docker-image -e COMPONENT=print; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/cron" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make release-docker-image-app-context -e COMPONENT=cron; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/database" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make release-database-docker-image; else echo "NO CHANGES SINCE LAST COMMIT"; fi

    #DEPLOY STAGE
    - stage: deploy
      if: type = push AND fork = false
      name: "Deploy Stage"
      env:
        - NAMESPACE=$TRAVIS_BRANCH
        - DOMAIN=$NAMESPACE.open-accessibility.org
      before_script:
        # Sets up kubernetes configuration
        - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - make setup-kube-config
        # Here we can overwrite the env variables for some edge cases
        - if [[ $TRAVIS_BRANCH == "master" ]]; then
          export NAMESPACE=goat; export DOMAIN=$NAMESPACE.open-accessibility.org;
          fi
      script:
        - bash -c 'echo $DOMAIN'
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/client" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make deploy -e COMPONENT=client -e NAMESPACE=$NAMESPACE -e DOMAIN=$DOMAIN; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/api" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make deploy -e COMPONENT=api -e NAMESPACE=$NAMESPACE -e DOMAIN=$DOMAIN; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/print" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make deploy -e COMPONENT=print -e NAMESPACE=$NAMESPACE -e DOMAIN=$DOMAIN; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/cron" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make deploy -e COMPONENT=cron -e NAMESPACE=$NAMESPACE -e DOMAIN=$DOMAIN; else echo "NO CHANGES SINCE LAST COMMIT"; fi
        - if app/scripts/build-condition.sh $TRAVIS_COMMIT_RANGE "app/database" || [[ $TRAVIS_COMMIT_MESSAGE == *"trigger build"* ]]; then
          make deploy-postgres-server -e NAMESPACE=$NAMESPACE -e DOMAIN=$DOMAIN; else echo "NO CHANGES SINCE LAST COMMIT"; fi

after_success:
  - make after-success
notifications:
  email:
    on_success: never
    on_failure: always
